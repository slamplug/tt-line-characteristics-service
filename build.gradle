configurations {
    jaxb
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
        classpath("com.sun.xml.bind:jaxb-xjc:2.2.4-1")
		classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'

group = 'com.firstutility.talktalk'

jar {
    baseName = 'tt-line-characteristics-service'
    version =  '1.0-SNAPSHOT'
}

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.ws:spring-ws-core")

    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
    jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
    jaxb 'javax.xml.bind:jaxb-api:2.2.7'

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
    testCompile("org.mock-server:mockserver-netty:3.10.4")
}


sourceSets {
    main {
        java {
            srcDir 'build/generated-sources/xjc'
        }
    }
}

task jaxb () {
    // perform actions
    doLast {
        file('build/generated-sources/xjc').mkdirs()
        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)
        ant.xjc(
                destdir: 'build/generated-sources/xjc',
                package: 'com.firstutility.talktalk.linecharateristics',
                schema: 'src/main/resources/wsdl/LineCharacteristics.wsdl',
                language: 'WSDL'
        )
    }
}

compileJava.dependsOn jaxb

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

docker {
    baseImage "chrischristo/ubuntu-java8"
    maintainer 'Simon Lamplugh "simon.lamplugh@first-utility.com"'
}

task buildDocker(type: Docker) {
  push = false
  applicationName = jar.baseName
  
  exposePort 8080
  
  volume "/app"
  volume "/tmp"
  
  addFile "build/docker/${jar.baseName}-${jar.version}.jar", \
  	"/app/${jar.baseName}.jar"
  	
  runCommand "bash -c 'touch /app/${jar.baseName}.jar'"
  
  entryPoint(["java", "-Djava.security.egd=file:/dev/./urandom", \
  	"-jar", "/app/${jar.baseName}.jar"])
  
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

build.dependsOn buildDocker
